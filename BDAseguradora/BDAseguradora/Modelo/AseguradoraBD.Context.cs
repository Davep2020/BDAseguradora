//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BDAseguradora.Modelo
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class bdaseguradoraEntities : DbContext
    {
        public bdaseguradoraEntities()
            : base("name=bdaseguradoraEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<TblAddiciones> TblAddiciones { get; set; }
        public DbSet<TblAdiccionesClientes> TblAdiccionesClientes { get; set; }
        public DbSet<TblDetallePersona> TblDetallePersona { get; set; }
        public DbSet<TblDetallePolizas> TblDetallePolizas { get; set; }
        public DbSet<TblPolizas> TblPolizas { get; set; }
        public DbSet<TblProvincia> TblProvincia { get; set; }
        public DbSet<TblSeguridad> TblSeguridad { get; set; }
        public DbSet<TblSeguros> TblSeguros { get; set; }
        public DbSet<TblTipoPersonas> TblTipoPersonas { get; set; }
    
        public virtual int spIngresarCobertura(string nombre, string descripcion, Nullable<int> porcentaje)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var porcentajeParameter = porcentaje.HasValue ?
                new ObjectParameter("Porcentaje", porcentaje) :
                new ObjectParameter("Porcentaje", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngresarCobertura", nombreParameter, descripcionParameter, porcentajeParameter);
        }
    
        public virtual ObjectResult<spMuestraAdiccion_Result> spMuestraAdiccion(Nullable<int> cedula)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMuestraAdiccion_Result>("spMuestraAdiccion", cedulaParameter);
        }
    
        public virtual ObjectResult<spMuestraCliente_Result> spMuestraCliente(Nullable<int> cedula)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMuestraCliente_Result>("spMuestraCliente", cedulaParameter);
        }
    
<<<<<<< HEAD
        public virtual ObjectResult<ConsultarCobertura_Result> ConsultarCobertura(string nombre)
=======
        public virtual ObjectResult<spRetornaAdicciones_Result> spRetornaAdicciones(string nombre, string codigo)
>>>>>>> 25df335f9b892c35c6bdf4c0bd0ddadae06c896f
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
<<<<<<< HEAD
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarCobertura_Result>("ConsultarCobertura", nombreParameter);
        }
    
        public virtual int sp_ModificaCobertura(Nullable<int> id, string nombre, string des, Nullable<int> porce)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var desParameter = des != null ?
                new ObjectParameter("Des", des) :
                new ObjectParameter("Des", typeof(string));
    
            var porceParameter = porce.HasValue ?
                new ObjectParameter("Porce", porce) :
                new ObjectParameter("Porce", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ModificaCobertura", idParameter, nombreParameter, desParameter, porceParameter);
        }
    
        public virtual ObjectResult<RetornaCoberturaID_Result> RetornaCoberturaID(Nullable<int> iD_DPoliza_Dpl)
        {
            var iD_DPoliza_DplParameter = iD_DPoliza_Dpl.HasValue ?
                new ObjectParameter("ID_DPoliza_Dpl", iD_DPoliza_Dpl) :
                new ObjectParameter("ID_DPoliza_Dpl", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetornaCoberturaID_Result>("RetornaCoberturaID", iD_DPoliza_DplParameter);
        }
    
        public virtual int EliminaCoberturas(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminaCoberturas", idParameter);
=======
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRetornaAdicciones_Result>("spRetornaAdicciones", nombreParameter, codigoParameter);
        }
    
        public virtual int spInsertaAdiccionXCliente(string cedula, string codigo)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertaAdiccionXCliente", cedulaParameter, codigoParameter);
        }
    
        public virtual int spIngresarCliente(Nullable<int> cedula, string genero, Nullable<System.DateTime> fechaNacimiento, string nombre, string primerApellido, string segundoApellido, string direccion, string pTelefono, string sTelefono, string correo, Nullable<int> tipoUsuario, Nullable<int> provincia)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(int));
    
            var generoParameter = genero != null ?
                new ObjectParameter("genero", genero) :
                new ObjectParameter("genero", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(System.DateTime));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("primerApellido", primerApellido) :
                new ObjectParameter("primerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("segundoApellido", segundoApellido) :
                new ObjectParameter("segundoApellido", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var pTelefonoParameter = pTelefono != null ?
                new ObjectParameter("pTelefono", pTelefono) :
                new ObjectParameter("pTelefono", typeof(string));
    
            var sTelefonoParameter = sTelefono != null ?
                new ObjectParameter("sTelefono", sTelefono) :
                new ObjectParameter("sTelefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var tipoUsuarioParameter = tipoUsuario.HasValue ?
                new ObjectParameter("tipoUsuario", tipoUsuario) :
                new ObjectParameter("tipoUsuario", typeof(int));
    
            var provinciaParameter = provincia.HasValue ?
                new ObjectParameter("provincia", provincia) :
                new ObjectParameter("provincia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngresarCliente", cedulaParameter, generoParameter, fechaNacimientoParameter, nombreParameter, primerApellidoParameter, segundoApellidoParameter, direccionParameter, pTelefonoParameter, sTelefonoParameter, correoParameter, tipoUsuarioParameter, provinciaParameter);
        }
    
        public virtual ObjectResult<spRetornaProvincias_Result> spRetornaProvincias(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRetornaProvincias_Result>("spRetornaProvincias", nombreParameter);
        }
    
        public virtual ObjectResult<spRetornaTipoPersona_Result> spRetornaTipoPersona(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRetornaTipoPersona_Result>("spRetornaTipoPersona", nombreParameter);
>>>>>>> 25df335f9b892c35c6bdf4c0bd0ddadae06c896f
        }
    }
}
